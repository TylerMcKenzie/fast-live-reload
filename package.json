{
  "name": "fast-live-reload",
  "description": "The swiss army knife of live reloading that works with all the browsers.",
  "author": [
    {
      "name": "Bogdan Mustiata",
      "email": "bogdan.mustiata@gmail.com"
    }
  ],
  "version": "1.4.4",
  "dependencies": {
    "chalk": "1.0.0",
    "cookie-parser": "1.3.4",
    "cross-spawn": "^0.4.0",
    "express": "4.12.2",
    "express-handlebars": "2.0.1",
    "express-http-proxy": "0.3.1",
    "handlebars": "3.0.3",
    "once-many": "^0.1.0",
    "shelljs": "0.4.0",
    "spawn-sync": "^1.0.11",
    "superb-class": "0.2.3",
    "watch": "0.14.0"
  },
  "devDependencies": {
    "grunt": "0.4.5",
    "grunt-contrib-clean": "0.6.0",
    "grunt-contrib-compass": "1.0.1",
    "grunt-contrib-concat": "0.5.1",
    "grunt-contrib-watch": "0.6.1",
    "grunt-sync": "0.2.3"
  },
  "keywords": [],
  "main": "./lib/fast-live-reload.js",
  "bin": {
    "fast-live-reload": "./lib/fast-live-reload.js"
  },
  "bugs": {
    "url": "https://github.com/bmustiata/fast-live-reload/issues"
  },
  "licenses": [
    {
      "type": "BSD",
      "url": "https://github.com/bmustiata/fast-live-reload/blob/master/LICENSE"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/bmustiata/fast-live-reload.git"
  },
  "readme": "# fast-live-reload\nThe swiss army knife of live reloading.\nA live reload that works with all the possible browsers (ie8+)\nwithout external dependencies (like jQuery), and can also serve\nlocal files.\nWorks also without changing the code of your web site.\nWatch a [presentation for v1.1.0](https://www.youtube.com/watch?v=VXN0rTAuMO4).\nIt's only 10 minutes long, and you get to see fast-live-reload in action. Even on IE.\n## Why\nI wanted a tool where I can test small and bigger applications with\nease on all browsers, even on remote machines (see for example\n[https://www.modern.ie/en-us]() ).\nThis tool is specifically designed for that.\n## Example\n```\n$ fast-live-reload\nServing . on port 9000\nChanges are served on port: 9001\nMonitoring paths: '.' every 100 millis.\n```\nThis will start monitoring the current folder for changes,\nserving it on port 9000, and using port 9001 in order to notify\nupdates. All of the above parameters can be changed.\nLive reloading is possible without having to add any client script\n_even for static resources_, by navigating to the /fast-live-reload/ URL,\nin this case it would be:\n```\nhttp://localhost:9000/fast-live-reload/\n```\n## Remote Locations\nRemote locations are proxied, and the reloader will allow to reload the\nbrowser even if it's an external URL, when files change.\n```\n$ fast-live-reload -s http://localhost:8080/my-webapp/some-page.jsp\nServing IFrame reloader for http://localhost:8080/my-webapp/some-page.jsp on port 9000\nProxying host: http://localhost:8080\nChanges are served on port: 9001\nMonitoring paths: '.' every 100 millis.\n```\nThis will proxy the localhost:8080 host on port 9000, and will allow getting\nthe /fast-live-reload/ URL into the website, where the monitoring of the site\nwill take place.\nHere are the benefits of using remote locations:\n1. You don't need the client listener code, since it's part of the parent iframe.\n2. In case the page would crash (e.g. 500 error), the reloader will still attempt\n    to reload it, when changes occur.\n3. Changing the page works, and when reloading, it will reload the current iframe\n    page.\n## A Complete Example\n```sh\nfast-live-reload -e \"grunt build-client\" -s /tmp -p 8000 path1 path2 path3 -d 1000\n```\nThis will monitor the given paths: `path1`, `path2` and `path3`, serve the `/tmp` folder\non port `9000`, and publishing the changes on port `8000`.\nWhenever files will change in either path1, path2 or path3, fast-live-reload will\nwait for a second (`-d 1000`) and then\n```\ngrunt build-client\n```\nwill be executed before notifying the browser clients of the changes.\n## No IFrame reloading\nWhen the IFrame reloading is not possible, or undesired, you can also use\nthe client reload script awailable in bower.\nMake sure the `client-fast-reload.js` is\nloaded into your application (see **Install** section for details):\n```html\n<!-- remove in production!! -->\n<script type=\"text/javascript\" src=\"client-fast-reload.js\"></script>\n```\n### Different Port Configuration\nIf the ports/host are different, these also need to be reflected in the client.\nThere are several ways to configure this.\n#### 0. fastLiveReloadHost Default Value\n*This option is preferred*\nIn case no value is specified, te default value is the current host\nwith the port 9001.\nFor example if you're calling your page from a remote machine:\n```\nhttp://my-test-site:8080/application/test.html\n```\nor\n```\nhttp://my-test-site/application/test.html\n```\nThe client-fast-reload will default the value of the `fastLiveReloadHost`\nto `my-test-site:9001`.\n#### 1. fastLiveReloadHost Global Variable\nUse the global variable `fastLiveReloadHost`.\n```html\n<!-- remove in production!! -->\n<script type=\"text/javascript\">\n    window.fastLiveReloadHost=\"localhost:8000\";\n</script>\n<script type=\"text/javascript\" src=\"client-fast-reload.js\"></script>\n```\n#### 2. fastLiveReloadHost Query Parameter\nIn the URL of the page that includes the `client-fast-reload.js` script,\nadd the `fastLiveReloadHost` query parameter.\nFor example:\n```\nhttp://my-site:1111/my-site/my-page.jsp?fastLiveReloadHost=localhost:8000\n```\nYou can still use other parameters if you wish. This will overwrite the\n`fastLiveReloadHost` global variable setting if it is defined.\n#### 3. fastLiveReloadHost Hash Parameter\nIn the URL of the page that includes the `client-fast-reload.js` script,\nadd the `fastLiveReloadHost` query parameter.\nFor example:\n```\nhttp://my-site:1111/my-site/my-page.jsp#fastLiveReloadHost=localhost:8000\n```\nThis has the highest precedence, and will overwrite other settings.\n## Install\nIn order to install this run:\n```sh\nnpm install -g fast-live-reload\n```\n### Client JavaScript\n_You don't need to change your code if you're using the IFrame reloader. In\norder to access it just go to `http://localhost:9000/fast-live-reload/`_\nTo fetch the client javascript, run:\n```sh\nbower install fast-live-reload\n```\nIf you don't have yet bower installed, of course, install it first:\n```sh\nnpm install -g bower\n```\n## Change Log\n* v1.4.4  2015-06-01  Allow setting a delay for commands with `-d`.\n* v1.4.3  2015-05-13  *BugFix* Removed scss bower dependency. Better log messages.\n* v1.4.2  2015-05-13  *BugFix* Responsive layout for the address bar. Display the title of the page.\n* v1.4.1  2015-05-12  *BugFix* Add --add-path param. A bunch of bugfixes.\n* v1.4.0  2015-05-11  Allow executing commands with `-e`.\n* v1.3.2  2015-05-11  Correct version in the metadata.\n* v1.3.1  2015-05-11  Allow the iframe reloader for local content. Fixed handlebars null data bug.\n* v1.3.0  2015-03-26  Proxy remote hosts when using `-s`.\n* v1.2.0  2015-03-25  Adds remote monitoring via iframe (`-s http://host/my-app/my-page.jsp`).\n* v1.1.0  2015-03-20  Default the fastLiveReloadHost parameter to `current-page-host:9001`.\n* v1.0.0  2015-03-19  Initial Release.\n",
  "readmeFilename": "README.md",
  "homepage": "http://blog.ciplogic.com"
}
